{"version":3,"file":"static/js/58.6b86817b.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/helpers/helpers.dataset.ts","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import type {Chart, ChartArea, ChartMeta, Scale, TRBL} from '../types/index.js';\n\nfunction getSizeForArea(scale: Scale, chartArea: ChartArea, field: keyof ChartArea) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta: ChartMeta, chartArea: ChartArea): TRBL {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nexport function getDatasetClipArea(chart: Chart, meta: ChartMeta): TRBL | false {\n  const clip = meta._clip;\n  if (clip.disabled) {\n    return false;\n  }\n  const area = getDatasetArea(meta, chart.chartArea);\n\n  return {\n    left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n    right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n    top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n    bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n  };\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getAxisCount() {\n    return this._getAxis().length;\n  }\n\n  getFirstScaleIdForIndexAxis() {\n    const scales = this.chart.scales;\n    const indexScaleId = this.chart.options.indexAxis;\n    return Object.keys(scales).filter(key => scales[key].axis === indexScaleId).shift();\n  }\n\n  _getAxis() {\n    const axis = {};\n    const firstScaleAxisId = this.getFirstScaleIdForIndexAxis();\n    for (const dataset of this.chart.data.datasets) {\n      axis[valueOrDefault(\n        this.chart.options.indexAxis === 'x' ? dataset.xAxisID : dataset.yAxisID, firstScaleAxisId\n      )] = true;\n    }\n    return Object.keys(axis);\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    const axisCount = this._getAxisCount();\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount * axisCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount * axisCount);\n      const axisID = this.chart.options.indexAxis === 'x' ? this.getDataset().xAxisID : this.getDataset().yAxisID;\n      const axisNumber = this._getAxis().indexOf(valueOrDefault(axisID, this.getFirstScaleIdForIndexAxis()));\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined) + axisNumber;\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea, _isDomSupported, retinaScale, getDatasetClipArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    // @ts-expect-error\n    const clip = getDatasetClipArea(this, meta);\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (clip) {\n      clipArea(ctx, clip);\n    }\n\n    meta.controller.draw();\n\n    if (clip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _angleDiff, _normalizeAngle, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\nfunction clipSelf(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, x, y, outerRadius, innerRadius, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const outerAngleClip = Math.min(borderWidth / outerRadius, _normalizeAngle(startAngle - endAngle));\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius - borderWidth / 2, startAngle + outerAngleClip / 2, endAngle - outerAngleClip / 2);\n\n  if (innerRadius > 0) {\n    const innerAngleClip = Math.min(borderWidth / innerRadius, _normalizeAngle(startAngle - endAngle));\n    ctx.arc(x, y, innerRadius + borderWidth / 2, endAngle - innerAngleClip / 2, startAngle + innerAngleClip / 2, true);\n  } else {\n    const clipWidth = Math.min(borderWidth / 2, outerRadius * _normalizeAngle(startAngle - endAngle));\n\n    if (borderJoinStyle === 'round') {\n      ctx.arc(x, y, clipWidth, endAngle - PI / 2, startAngle + PI / 2, true);\n    } else if (borderJoinStyle === 'bevel') {\n      const r = 2 * clipWidth * clipWidth;\n      const endX = -r * Math.cos(endAngle + PI / 2) + x;\n      const endY = -r * Math.sin(endAngle + PI / 2) + y;\n      const startX = r * Math.cos(startAngle + PI / 2) + x;\n      const startY = r * Math.sin(startAngle + PI / 2) + y;\n      ctx.lineTo(endX, endY);\n      ctx.lineTo(startX, startY);\n    }\n  }\n  ctx.closePath();\n\n  ctx.moveTo(0, 0);\n  ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  ctx.clip('evenodd');\n}\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset, borderRadius} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (options.selfJoin && endAngle - startAngle >= PI && borderRadius === 0 && borderJoinStyle !== 'miter') {\n    clipSelf(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n    selfJoin: false,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","current","setLabels","currentData","nextLabels","labels","setDatasets","nextDatasets","datasetIdKey","arguments","length","addedDatasets","datasets","map","nextDataset","currentDataset","find","dataset","data","includes","push","Object","assign","cloneData","nextData","ChartComponent","props","height","width","redraw","type","options","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","destroy","useEffect","chart","nextOptions","setOptions","config","setTimeout","update","React","role","Chart","forwardRef","createTypedChart","registerables","register","Bar","BarController","Doughnut","DoughnutController","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","count","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","meta","_clip","disabled","xScale","yScale","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","categoryPercentage","barPercentage","grouped","_index_","_value_","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","_getStackCount","_getAxisCount","_getAxis","getFirstScaleIdForIndexAxis","indexScaleId","firstScaleAxisId","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","axisCount","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","axisID","axisNumber","stackIndex","rects","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","distanceToDefinedLo","findIndex","distanceToDefinedHi","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","selfJoin","outerAngleClip","innerAngleClip","clipWidth","clipSelf","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","_decimated","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","animated","_fullLoop","_points","_segments","_pointsUpdated","updateControlPoints","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","unshift","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel"],"sourceRoot":""}