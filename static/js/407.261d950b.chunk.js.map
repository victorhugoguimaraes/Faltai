{"version":3,"file":"static/js/407.261d950b.chunk.js","mappings":"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","sources":["components/ScheduledNotifications.js","components/NotificationManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FaBell, FaTimes, FaClock, FaCalendarAlt } from 'react-icons/fa';\r\nimport notificationService from '../services/notificationService';\r\n\r\nfunction ScheduledNotifications({ isOpen, onClose }) {\r\n  const [scheduledNotifications, setScheduledNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      loadScheduledNotifications();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const loadScheduledNotifications = () => {\r\n    const notifications = notificationService.getScheduledNotifications();\r\n    setScheduledNotifications(notifications);\r\n  };\r\n\r\n  const formatDate = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const options = {\r\n      weekday: 'short',\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    };\r\n    return date.toLocaleDateString('pt-BR', options);\r\n  };\r\n\r\n  const getNotificationIcon = (notification) => {\r\n    if (notification.type === 'weekly') {\r\n      return <FaCalendarAlt className=\"text-blue-500\" />;\r\n    }\r\n    return <FaBell className=\"text-orange-500\" />;\r\n  };\r\n\r\n  const cancelNotification = (notificationId) => {\r\n    notificationService.removeScheduledNotification(notificationId);\r\n    loadScheduledNotifications(); // Recarrega a lista\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg w-full max-w-md max-h-[80vh] flex flex-col\">\r\n        <div className=\"flex justify-between items-center p-4 border-b\">\r\n          <h2 className=\"text-lg font-semibold text-gray-800 flex items-center gap-2\">\r\n            <FaClock className=\"text-blue-600\" />\r\n            Notificações Agendadas\r\n          </h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-500 hover:text-gray-700\"\r\n          >\r\n            <FaTimes />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"overflow-y-auto flex-1\">\r\n          {scheduledNotifications.length === 0 ? (\r\n            <div className=\"p-6 text-center\">\r\n              <FaClock className=\"mx-auto text-4xl text-gray-300 mb-3\" />\r\n              <p className=\"text-gray-500\">\r\n                Nenhuma notificação agendada\r\n              </p>\r\n              <p className=\"text-sm text-gray-400 mt-2\">\r\n                Adicione avaliações para receber lembretes automáticos!\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"divide-y\">\r\n              {scheduledNotifications.map(notification => (\r\n                <div\r\n                  key={notification.id}\r\n                  className=\"p-4 hover:bg-gray-50 flex items-start justify-between gap-3\"\r\n                >\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center gap-2 mb-1\">\r\n                      {getNotificationIcon(notification)}\r\n                      <h3 className=\"font-medium text-gray-800 text-sm\">\r\n                        {notification.title}\r\n                      </h3>\r\n                    </div>\r\n                    <p className=\"text-gray-600 text-sm mb-2\">\r\n                      {notification.message}\r\n                    </p>\r\n                    <div className=\"flex items-center gap-1 text-xs text-gray-500\">\r\n                      <FaClock />\r\n                      <span>{formatDate(notification.scheduledTime)}</span>\r\n                    </div>\r\n                    \r\n                    {notification.type === 'evaluation' && (\r\n                      <div className=\"mt-1\">\r\n                        <span className=\"inline-block px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">\r\n                          {notification.daysAhead} dia{notification.daysAhead === 1 ? '' : 's'} antes\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {notification.type === 'weekly' && (\r\n                      <div className=\"mt-1\">\r\n                        <span className=\"inline-block px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\r\n                          Lembrete Semanal\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  {notification.type !== 'weekly' && (\r\n                    <button\r\n                      onClick={() => cancelNotification(notification.id)}\r\n                      className=\"text-gray-400 hover:text-red-600 p-1\"\r\n                      title=\"Cancelar notificação\"\r\n                    >\r\n                      <FaTimes className=\"text-sm\" />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"p-4 border-t bg-gray-50\">\r\n          <div className=\"text-xs text-gray-600 space-y-1\">\r\n            <p>• Avaliações: lembretes 7, 3 e 1 dia antes</p>\r\n            <p>• Sábados 13h: lembrete para marcar faltas</p>\r\n            <p>• Notificações aparecem mesmo com app fechado</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScheduledNotifications;","import React, { useState, useEffect, forwardRef, useImperativeHandle } from 'react';\r\nimport { FaBell, FaTimes, FaClipboardCheck, FaBook, FaClock, FaCog } from 'react-icons/fa';\r\nimport ScheduledNotifications from './ScheduledNotifications';\r\n\r\nconst NotificationManager = forwardRef(({ materias }, ref) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [permissionGranted, setPermissionGranted] = useState(false);\r\n  const [scheduledNotificationsOpen, setScheduledNotificationsOpen] = useState(false);\r\n  const [settingsOpen, setSettingsOpen] = useState(false);\r\n  \r\n  // Configurações padrão das notificações\r\n  const [notificationSettings, setNotificationSettings] = useState({\r\n    evaluationReminders: true,    // Lembretes de avaliações (7, 3, 1 dia)\r\n    weeklyReminders: true,        // Lembrete semanal de faltas\r\n    attendanceAlerts: true,       // Alertas de limite de faltas\r\n    systemNotifications: true     // Notificações do sistema\r\n  });\r\n\r\n  // Solicita permissão para notificações do sistema\r\n  useEffect(() => {\r\n    // Carrega configurações salvas\r\n    const savedSettings = localStorage.getItem('notification_settings');\r\n    if (savedSettings) {\r\n      try {\r\n        setNotificationSettings(JSON.parse(savedSettings));\r\n      } catch (e) {\r\n        console.error('Erro ao carregar configurações:', e);\r\n      }\r\n    }\r\n    \r\n    if ('Notification' in window) {\r\n      if (Notification.permission === 'granted') {\r\n        setPermissionGranted(true);\r\n      } else if (Notification.permission !== 'denied') {\r\n        Notification.requestPermission().then(permission => {\r\n          setPermissionGranted(permission === 'granted');\r\n        });\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Função para mostrar notificação do sistema\r\n  const showSystemNotification = (notification) => {\r\n    if (permissionGranted && 'Notification' in window && notificationSettings.systemNotifications) {\r\n      const systemNotification = new Notification(notification.titulo, {\r\n        body: notification.mensagem,\r\n        icon: '/icon-192.png',\r\n        tag: notification.id,\r\n        requireInteraction: false,\r\n        silent: false\r\n      });\r\n      \r\n      setTimeout(() => systemNotification.close(), 5000);\r\n    }\r\n  };\r\n\r\n  // Salva configurações no localStorage\r\n  const saveNotificationSettings = (newSettings) => {\r\n    setNotificationSettings(newSettings);\r\n    localStorage.setItem('notification_settings', JSON.stringify(newSettings));\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    addNotification: (notification) => {\r\n      const notificationId = `${notification.tipo}-${notification.mensagem}`;\r\n      \r\n      // Evita duplicatas de notificações\r\n      setNotifications(prev => {\r\n        if (!prev.some(n => n.id === notificationId)) {\r\n          const newNotification = {\r\n            id: notificationId,\r\n            ...notification,\r\n            timestamp: new Date()\r\n          };\r\n          const updatedNotifications = [newNotification, ...prev];\r\n          \r\n          // Salva no localStorage\r\n          localStorage.setItem('app_notifications', JSON.stringify(updatedNotifications));\r\n          \r\n          // Mostra notificação do sistema se a app não estiver em foco\r\n          if (document.hidden || !document.hasFocus()) {\r\n            showSystemNotification(newNotification);\r\n          }\r\n          \r\n          return updatedNotifications;\r\n        }\r\n        return prev;\r\n      });\r\n    }\r\n  }));\r\n\r\n  const removeNotification = (id) => {\r\n    setNotifications(prev => {\r\n      const updatedNotifications = prev.filter(n => n.id !== id);\r\n      localStorage.setItem('app_notifications', JSON.stringify(updatedNotifications));\r\n      return updatedNotifications;\r\n    });\r\n  };\r\n\r\n  const formatTimeAgo = (date) => {\r\n    const seconds = Math.floor((new Date() - date) / 1000);\r\n    const intervals = {\r\n      ano: 31536000,\r\n      mês: 2592000,\r\n      semana: 604800,\r\n      dia: 86400,\r\n      hora: 3600,\r\n      minuto: 60\r\n    };\r\n\r\n    for (const [unit, secondsInUnit] of Object.entries(intervals)) {\r\n      const interval = Math.floor(seconds / secondsInUnit);\r\n      if (interval >= 1) {\r\n        return `há ${interval} ${unit}${interval > 1 ? (unit === 'mês' ? 'es' : 's') : ''}`;\r\n      }\r\n    }\r\n    return 'agora mesmo';\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Carrega notificações salvas no localStorage\r\n    const savedNotifications = localStorage.getItem('app_notifications');\r\n    if (savedNotifications) {\r\n      try {\r\n        const parsed = JSON.parse(savedNotifications);\r\n        // Filtra notificações antigas (mais de 7 dias)\r\n        const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\r\n        const validNotifications = parsed.filter(n => new Date(n.timestamp) > weekAgo);\r\n        setNotifications(validNotifications);\r\n        \r\n        // Atualiza localStorage removendo notificações antigas\r\n        if (validNotifications.length !== parsed.length) {\r\n          localStorage.setItem('app_notifications', JSON.stringify(validNotifications));\r\n        }\r\n      } catch (e) {\r\n        console.error('Erro ao carregar notificações:', e);\r\n      }\r\n    }\r\n\r\n    const hoje = new Date();\r\n    const avaliacoesProximas = (materias || []).flatMap(materia => \r\n      (materia.avaliacoes || []).map(av => ({\r\n        ...av,\r\n        materia: materia.nome,\r\n        data: new Date(av.data)\r\n      }))\r\n    ).filter(av => av.data >= hoje)\r\n    .sort((a, b) => a.data - b.data);\r\n\r\n    avaliacoesProximas.forEach(av => {\r\n      const diasAteAvaliacao = Math.ceil((av.data - hoje) / (1000 * 60 * 60 * 24));\r\n      const notificationId = `${av.id}-${av.data}`;\r\n      \r\n      let mensagem = '';\r\n      if (diasAteAvaliacao === 0) {\r\n        mensagem = `Hoje tem ${av.tipo === 'PROVA' ? 'prova' : 'trabalho'} de ${av.materia}`;\r\n      } else if (diasAteAvaliacao === 1) {\r\n        mensagem = `Amanhã tem ${av.tipo === 'PROVA' ? 'prova' : 'trabalho'} de ${av.materia}`;\r\n      } else if (diasAteAvaliacao <= 7) {\r\n        mensagem = `Daqui a ${diasAteAvaliacao} dias tem ${av.tipo === 'PROVA' ? 'prova' : 'trabalho'} de ${av.materia}`;\r\n      } else if (diasAteAvaliacao <= 14) {\r\n        const semanas = Math.ceil(diasAteAvaliacao / 7);\r\n        mensagem = `Daqui a ${semanas} semana${semanas > 1 ? 's' : ''} tem ${av.tipo === 'PROVA' ? 'prova' : 'trabalho'} de ${av.materia}`;\r\n      }\r\n\r\n      if (mensagem) {\r\n        const notification = {\r\n          id: notificationId,\r\n          titulo: av.tipo === 'PROVA' ? '📝 Prova Próxima' : '📚 Trabalho Próximo',\r\n          mensagem,\r\n          tipo: 'info',\r\n          timestamp: new Date(),\r\n          avaliacao: true\r\n        };\r\n\r\n        setNotifications(prev => {\r\n          if (!prev.some(n => n.id === notificationId)) {\r\n            const updatedNotifications = [notification, ...prev];\r\n            localStorage.setItem('app_notifications', JSON.stringify(updatedNotifications));\r\n            return updatedNotifications;\r\n          }\r\n          return prev;\r\n        });\r\n      }\r\n    });\r\n\r\n    (materias || []).forEach(materia => {\r\n      if (materia.faltas >= materia.maxFaltas) {\r\n        const notificationId = `max-faltas-${materia.nome}`;\r\n        const notification = {\r\n          id: notificationId,\r\n          titulo: '⚠️ Limite de Faltas',\r\n          mensagem: `Você atingiu o limite de faltas em ${materia.nome}`,\r\n          tipo: 'alerta',\r\n          timestamp: new Date()\r\n        };\r\n\r\n        setNotifications(prev => {\r\n          if (!prev.some(n => n.id === notificationId)) {\r\n            const updatedNotifications = [notification, ...prev];\r\n            localStorage.setItem('app_notifications', JSON.stringify(updatedNotifications));\r\n            return updatedNotifications;\r\n          }\r\n          return prev;\r\n        });\r\n      }\r\n    });\r\n  }, [materias]);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => setIsOpen(true)}\r\n        className=\"fixed bottom-4 right-4 bg-blue-600 text-white rounded-full p-3 sm:p-4 shadow-2xl hover:bg-blue-700 transition-all z-[9999] hover:scale-110 active:scale-95\"\r\n        style={{ touchAction: 'manipulation' }}\r\n        aria-label=\"Abrir notificações\"\r\n      >\r\n        <FaBell className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n        {notifications.length > 0 && (\r\n          <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs font-bold rounded-full w-5 h-5 sm:w-6 sm:h-6 flex items-center justify-center animate-pulse\">\r\n            {notifications.length > 99 ? '99+' : notifications.length}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-end sm:items-center justify-center z-[10000] p-0 sm:p-4\">\r\n          <div className=\"bg-white rounded-t-3xl sm:rounded-lg w-full sm:max-w-md max-h-[90vh] sm:max-h-[80vh] flex flex-col shadow-2xl\">\r\n              <div className=\"sm:hidden flex justify-center pt-2 pb-1\">\r\n                <div className=\"w-12 h-1.5 bg-gray-300 rounded-full\"></div>\r\n              </div>\r\n            \r\n              <div className=\"flex justify-between items-center p-3 sm:p-4 border-b sticky top-0 bg-white z-10\">\r\n                <h2 className=\"text-base sm:text-lg font-semibold text-gray-800\">Notificações</h2>\r\n                <div className=\"flex items-center gap-1 sm:gap-2\">\r\n              <button\r\n                onClick={() => setSettingsOpen(true)}\r\n                  className=\"text-gray-600 hover:text-blue-600 p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n                title=\"Configurações de notificações\"\r\n              >\r\n                  <FaCog className=\"w-4 h-4\" />\r\n              </button>\r\n              <button\r\n                onClick={() => setScheduledNotificationsOpen(true)}\r\n                  className=\"text-blue-600 hover:text-blue-800 p-2 hover:bg-blue-50 rounded-lg transition-colors\"\r\n                title=\"Ver notificações agendadas\"\r\n              >\r\n                  <FaClock className=\"w-4 h-4\" />\r\n              </button>\r\n              <button\r\n                onClick={() => setIsOpen(false)}\r\n                  className=\"text-gray-500 hover:text-gray-700 p-2 hover:bg-gray-100 rounded-lg transition-colors\"\r\n              >\r\n                  <FaTimes className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n          </div>            <div className=\"overflow-y-auto flex-1\">\r\n              {notifications.length === 0 ? (\r\n                  <p className=\"text-gray-500 text-center p-8 sm:p-12\">\r\n                  Nenhuma notificação\r\n                </p>\r\n              ) : (\r\n                <div className=\"divide-y\">\r\n                  {notifications.map(notification => (\r\n                    <div\r\n                      key={notification.id}\r\n                        className=\"p-3 sm:p-4 hover:bg-gray-50 active:bg-gray-100 flex items-start justify-between gap-2 sm:gap-4\"\r\n                    >\r\n                        <div className=\"flex-1 min-w-0\">\r\n                          <div className=\"flex items-center gap-2 mb-1\">\r\n                          {notification.avaliacao ? (\r\n                            notification.titulo.includes('Prova') ? (\r\n                                <FaClipboardCheck className=\"text-red-500 w-4 h-4\" />\r\n                            ) : (\r\n                                <FaBook className=\"text-red-500 w-4 h-4\" />\r\n                            )\r\n                          ) : (\r\n                            <FaBell className={\r\n                                'w-4 h-4 ' + (\r\n                              notification.tipo === 'sucesso' ? 'text-green-500' :\r\n                              notification.tipo === 'alerta' ? 'text-yellow-500' :\r\n                                'text-blue-500')\r\n                            } />\r\n                          )}\r\n                            <h3 className=\"font-medium text-gray-800 text-sm sm:text-base\">\r\n                            {notification.titulo}\r\n                          </h3>\r\n                        </div>\r\n                          <p className=\"text-gray-600 text-sm sm:text-base mt-1\">{notification.mensagem}</p>\r\n                        <p className=\"text-xs text-gray-400 mt-1\">\r\n                          {formatTimeAgo(notification.timestamp)}\r\n                        </p>\r\n                      </div>\r\n                      <button\r\n                        onClick={() => removeNotification(notification.id)}\r\n                          className=\"text-gray-400 hover:text-gray-600 p-1 hover:bg-gray-200 rounded\"\r\n                      >\r\n                          <FaTimes className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <ScheduledNotifications \r\n        isOpen={scheduledNotificationsOpen}\r\n        onClose={() => setScheduledNotificationsOpen(false)}\r\n      />\r\n      \r\n      {/* Modal de Configurações de Notificações */}\r\n      {settingsOpen && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-end sm:items-center justify-center z-[10001] p-0 sm:p-4\">\r\n            <div className=\"bg-white rounded-t-3xl sm:rounded-lg w-full sm:max-w-md max-h-[90vh] overflow-y-auto\">\r\n              <div className=\"sm:hidden flex justify-center pt-2 pb-1 sticky top-0 bg-white z-10\">\r\n                <div className=\"w-12 h-1.5 bg-gray-300 rounded-full\"></div>\r\n              </div>\r\n            \r\n              <div className=\"flex justify-between items-center p-3 sm:p-4 border-b sticky top-4 sm:top-0 bg-white z-10\">\r\n                <h2 className=\"text-base sm:text-lg font-semibold text-gray-800 flex items-center gap-2\">\r\n                  <FaCog className=\"text-blue-600 w-4 h-4 sm:w-5 sm:h-5\" />\r\n                Configurações de Notificações\r\n              </h2>\r\n              <button\r\n                onClick={() => setSettingsOpen(false)}\r\n                  className=\"text-gray-500 hover:text-gray-700 p-2 hover:bg-gray-100 rounded-lg\"\r\n              >\r\n                  <FaTimes className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n\r\n              <div className=\"p-3 sm:p-4 space-y-4 pb-6\">\r\n              <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center justify-between gap-3\">\r\n                    <div className=\"flex-1\">\r\n                      <h4 className=\"font-medium text-gray-800 text-sm sm:text-base\">Lembretes de Avaliações</h4>\r\n                    <p className=\"text-xs text-gray-500\">Notificações 7, 3 e 1 dia antes</p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={notificationSettings.evaluationReminders}\r\n                      onChange={(e) => saveNotificationSettings({\r\n                        ...notificationSettings,\r\n                        evaluationReminders: e.target.checked\r\n                      })}\r\n                      className=\"sr-only peer\"\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                  </label>\r\n                </div>\r\n\r\n                  <div className=\"flex items-center justify-between gap-3\">\r\n                    <div className=\"flex-1\">\r\n                      <h4 className=\"font-medium text-gray-800 text-sm sm:text-base\">Lembrete Semanal</h4>\r\n                    <p className=\"text-xs text-gray-500\">Todo sábado às 13h para marcar faltas</p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={notificationSettings.weeklyReminders}\r\n                      onChange={(e) => saveNotificationSettings({\r\n                        ...notificationSettings,\r\n                        weeklyReminders: e.target.checked\r\n                      })}\r\n                      className=\"sr-only peer\"\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                  </label>\r\n                </div>\r\n\r\n                  <div className=\"flex items-center justify-between gap-3\">\r\n                    <div className=\"flex-1\">\r\n                      <h4 className=\"font-medium text-gray-800 text-sm sm:text-base\">Alertas de Presença</h4>\r\n                    <p className=\"text-xs text-gray-500\">Quando atingir limite de faltas</p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={notificationSettings.attendanceAlerts}\r\n                      onChange={(e) => saveNotificationSettings({\r\n                        ...notificationSettings,\r\n                        attendanceAlerts: e.target.checked\r\n                      })}\r\n                      className=\"sr-only peer\"\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                  </label>\r\n                </div>\r\n\r\n                  <div className=\"flex items-center justify-between gap-3\">\r\n                    <div className=\"flex-1\">\r\n                      <h4 className=\"font-medium text-gray-800 text-sm sm:text-base\">Notificações do Sistema</h4>\r\n                    <p className=\"text-xs text-gray-500\">Notificações push quando app fechado</p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={notificationSettings.systemNotifications}\r\n                      onChange={(e) => saveNotificationSettings({\r\n                        ...notificationSettings,\r\n                        systemNotifications: e.target.checked\r\n                      })}\r\n                      className=\"sr-only peer\"\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n                <div className=\"pt-3 sm:pt-4 border-t\">\r\n                  <div className=\"text-xs text-gray-600 space-y-1 leading-relaxed\">\r\n                  <p>• As configurações são salvas automaticamente</p>\r\n                  <p>• Notificações do sistema requerem permissão do navegador</p>\r\n                  <p>• Alterações afetam apenas novas notificações</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default NotificationManager; "],"names":["_ref","isOpen","onClose","scheduledNotifications","setScheduledNotifications","useState","useEffect","loadScheduledNotifications","notifications","notificationService","getScheduledNotifications","getNotificationIcon","notification","type","_jsx","FaCalendarAlt","className","FaBell","children","_jsxs","FaClock","onClick","FaTimes","length","map","title","message","timestamp","scheduledTime","Date","toLocaleDateString","weekday","year","month","day","hour","minute","daysAhead","cancelNotification","notificationId","id","removeScheduledNotification","forwardRef","ref","materias","setNotifications","setIsOpen","permissionGranted","setPermissionGranted","scheduledNotificationsOpen","setScheduledNotificationsOpen","settingsOpen","setSettingsOpen","notificationSettings","setNotificationSettings","evaluationReminders","weeklyReminders","attendanceAlerts","systemNotifications","savedSettings","localStorage","getItem","JSON","parse","e","console","error","window","Notification","permission","requestPermission","then","saveNotificationSettings","newSettings","setItem","stringify","useImperativeHandle","addNotification","tipo","mensagem","prev","some","n","newNotification","updatedNotifications","document","hidden","hasFocus","systemNotification","titulo","body","icon","tag","requireInteraction","silent","setTimeout","close","showSystemNotification","formatTimeAgo","date","seconds","Math","floor","intervals","ano","mês","semana","dia","hora","minuto","unit","secondsInUnit","Object","entries","interval","savedNotifications","parsed","weekAgo","now","validNotifications","filter","hoje","flatMap","materia","avaliacoes","av","nome","data","sort","a","b","forEach","diasAteAvaliacao","ceil","semanas","avaliacao","faltas","maxFaltas","_Fragment","style","touchAction","FaCog","includes","FaClipboardCheck","FaBook","removeNotification","ScheduledNotifications","checked","onChange","target"],"sourceRoot":""}